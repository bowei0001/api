<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DocuAPI-日本語</title>
    <link>https://docuapi.netlify.com/jp/</link>
    <description>Recent content on DocuAPI-日本語</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://docuapi.netlify.com/jp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>API</title>
      <link>https://docuapi.netlify.com/jp/main/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docuapi.netlify.com/jp/main/</guid>
      <description>IntroductionこちらはPayPay決済を導入する開発者向けドキュメントになります。こちらのPayment SDKを使うことで簡単に開発をできるように支援することを目的としています。こちらのPayment SDKを用いてビジネス要求を実現しつつPayPayのガイドラインに合わせた実装を行うことが可能になります。
Denne API-dokumentasjonen vart laga med DocuAPI, eit tema for den statiske nettstadsmakaren Hugo.
認証 To authorize, use this code:
 package main import &amp;#34;github.com/bep/kittn/auth&amp;#34; func main() { api := auth.Authorize(&amp;#34;meowmeowmeow&amp;#34;) // Just to make it compile 	_ = api } require &amp;#39;kittn&amp;#39; api = Kittn::APIClient.authorize!(&amp;#39;meowmeowmeow&amp;#39;) import kittn api = kittn.authorize(&amp;#39;meowmeowmeow&amp;#39;) # With shell, you can just pass the correct header with each request curl &amp;#34;api_endpoint_here&amp;#34; -H &amp;#34;Authorization: meowmeowmeow&amp;#34; const kittn = require(&amp;#39;kittn&amp;#39;); let api = kittn.</description>
    </item>
    
    <item>
      <title>Kittens</title>
      <link>https://docuapi.netlify.com/jp/kittens/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docuapi.netlify.com/jp/kittens/</guid>
      <description>Kittens Get All Kittenspackage main import &amp;#34;github.com/bep/kittn/auth&amp;#34; func main() { api := auth.Authorize(&amp;#34;meowmeowmeow&amp;#34;) _ = api.GetKittens() } require &amp;#39;kittn&amp;#39; api = Kittn::APIClient.authorize!(&amp;#39;meowmeowmeow&amp;#39;) api.kittens.get import kittn api = kittn.authorize(&amp;#39;meowmeowmeow&amp;#39;) api.kittens.get() curl &amp;#34;http://example.com/api/kittens&amp;#34; -H &amp;#34;Authorization: meowmeowmeow&amp;#34; const kittn = require(&amp;#39;kittn&amp;#39;); let api = kittn.authorize(&amp;#39;meowmeowmeow&amp;#39;); let kittens = api.kittens.get();  The above command returns JSON structured like this:
 [ { &amp;#34;id&amp;#34;: 1, &amp;#34;name&amp;#34;: &amp;#34;Fluffums&amp;#34;, &amp;#34;breed&amp;#34;: &amp;#34;calico&amp;#34;, &amp;#34;fluffiness&amp;#34;: 6, &amp;#34;cuteness&amp;#34;: 7 }, { &amp;#34;id&amp;#34;: 2, &amp;#34;name&amp;#34;: &amp;#34;Max&amp;#34;, &amp;#34;breed&amp;#34;: &amp;#34;unknown&amp;#34;, &amp;#34;fluffiness&amp;#34;: 5, &amp;#34;cuteness&amp;#34;: 10 } ] This endpoint retrieves all kittens.</description>
    </item>
    
    <item>
      <title>Get a Specific Kitten</title>
      <link>https://docuapi.netlify.com/jp/kittens-specific/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docuapi.netlify.com/jp/kittens-specific/</guid>
      <description>Get a Specific Kittenpackage main import &amp;#34;github.com/bep/kittn/auth&amp;#34; func main() { api := auth.Authorize(&amp;#34;meowmeowmeow&amp;#34;) _ = api.GetKitten(2) } require &amp;#39;kittn&amp;#39; api = Kittn::APIClient.authorize!(&amp;#39;meowmeowmeow&amp;#39;) api.kittens.get(2) import kittn api = kittn.authorize(&amp;#39;meowmeowmeow&amp;#39;) api.kittens.get(2) curl &amp;#34;http://example.com/api/kittens/2&amp;#34; -H &amp;#34;Authorization: meowmeowmeow&amp;#34; const kittn = require(&amp;#39;kittn&amp;#39;); let api = kittn.authorize(&amp;#39;meowmeowmeow&amp;#39;); let max = api.kittens.get(2);  The above command returns JSON structured like this:
 { &amp;#34;id&amp;#34;: 2, &amp;#34;name&amp;#34;: &amp;#34;Max&amp;#34;, &amp;#34;breed&amp;#34;: &amp;#34;unknown&amp;#34;, &amp;#34;fluffiness&amp;#34;: 5, &amp;#34;cuteness&amp;#34;: 10 } This endpoint retrieves a specific kitten.</description>
    </item>
    
    <item>
      <title>エラー</title>
      <link>https://docuapi.netlify.com/jp/errors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docuapi.netlify.com/jp/errors/</guid>
      <description>エラー(TODO日本語）This error section is stored in a separate file, errors.md. DocuAPI allows you to split the single page documentation in as many files as needed. Files are included in the default Hugo page order . One way of ordering the pages is by setting the page `weight` in the front matter. Pages with lower weight will be listed first. Kittn-APIet tek i bruk følgjande feilkodar:
   Feilkode Forklaring     400 Bad Request &amp;ndash; Din førespurnad har forbetringspotensiale   401 Unauthorized &amp;ndash; Feil API-nøkkel   403 Forbidden &amp;ndash; Denne kattungen er berre tilgjengeleg for administratorar   404 Not Found &amp;ndash; Denne kattungen vart ikkje funnen   405 Method Not Allowed &amp;ndash; Du prøvde å få tak i kattungen på ein snodig og ulovleg måte   406 Not Acceptable &amp;ndash; Du bad om eit format som ikkje er JSON   410 Gone &amp;ndash; Kattungen har rømt frå serveren.</description>
    </item>
    
  </channel>
</rss>
